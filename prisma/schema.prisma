generator client {
  provider               = "prisma-client-js"
  fields_Validator_from  = "class-validator"
  fields_Validator_input = true
}

generator nestgraphql {
  provider = "node node_modules/prisma-nestjs-graphql"
  output   = "../src/generated"
  reExport = Directories
}

datasource db {
  provider  = "mysql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  admin @map("admin")
  user  @map("user")
}

model User {
  id Int @id @default(autoincrement())

  /// @Validator.MinLength(3)
  name String? @db.MediumText

  email String @unique

  role Role @default(user)

  /// @HideField()
  password String? @db.MediumText

  lastLogin DateTime?

  /// @HideField()
  createdAt DateTime @default(now())

  /// @HideField()
  updatedAt DateTime @updatedAt

  scripts UserScript[]

  @@map("users")
}

model Script {
  id Int @id @default(autoincrement())

  name String? @db.TinyText

  description String? @db.LongText

  path String @db.MediumText

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

  users UserScript[]

  @@map("scripts")
}

model UserScript {
  id Int @id @default(autoincrement())

  userId Int

  scriptId Int

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  script Script @relation(fields: [scriptId], references: [id])

  @@unique([userId, scriptId])
  @@index([userId])
  @@index([scriptId])
  @@map("users_scripts")
}
